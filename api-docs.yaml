openapi: 3.0.0
info:
  title: 'Finance-Tracker API Documentation'
  version: 1.0.0
  description: 'Built and implemented authentication and authorization logic using Node.js, Express.js, OpenAPI specification, and Swagger.'
servers:
  - url: http://localhost:5001
    description: 'Development server'
components:
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: 'Bearer with JWT Token'
  schemas:
    RegisterUser:
      type: object
      properties:
        username:
          type: string
          default: maker69
        password:
          type: string
          minLength: 8
          default: maker69
        role:
          description: Possible values for roles are maker, approver, admin.
          type: string 
          enum:
            - maker
            - approver
            - admin
          default: maker
      required:
        - username
        - password
        - role
    LoginUser:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    BadRequest:
      type: object
      properties:
        success:
          type: boolean
          default: false
        error:
          type: string
paths:
  /api/v1/auth/register:
    post:
      tags:
        - auth 
      summary: 'Register user'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUser'
      responses:
        '200':
          description: 'User Created'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: 
                    type: boolean
                  message:
                    type: string
                    default: Successfully created a user
                  data:
                    type: object
                    properties:
                      _id:
                        type: integer
                        default: 64e4ddabd76b719 // Generated by mongodb
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'           
  /api/v1/auth/login:
    post:
      tags:
        - auth 
      summary: 'Login user'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUser'
      responses:
        '200':
          description: 'Login Success'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: 
                    type: boolean
                  message:
                    type: string
                  data:
                    properties:
                      token: 
                        type: string
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
  /api/v1/transfers:
    get:
      tags:
        - transfer
      security:
        - bearer: []
      summary: 'List transfer'
      responses:
        '200':
          description: 'Get all transfers list'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        author:
                          type: string
                
                
                
                
                